import{_ as n,c as a,b as e,o as p}from"./app-C9OaS0FJ.js";const l={};function t(i,s){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="项目构建" tabindex="-1"><a class="header-anchor" href="#项目构建"><span>项目构建</span></a></h1><h2 id="_1-使用vite构建项目" tabindex="-1"><a class="header-anchor" href="#_1-使用vite构建项目"><span>1.使用vite构建项目</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># npm</span></span>
<span class="line"><span class="token function">npm</span> init vite@lastest</span>
<span class="line"><span class="token comment"># yarn</span></span>
<span class="line"><span class="token function">yarn</span> create vite</span>
<span class="line"><span class="token comment"># pnpm</span></span>
<span class="line"><span class="token function">pnpm</span> create vite</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-editorconfig" tabindex="-1"><a class="header-anchor" href="#_2-editorconfig"><span>2.EditorConfig</span></a></h2><p>项目根目录创建.editorconfig文件,统一格式</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># https://editorconfig.org</span></span>
<span class="line"><span class="token comment"># root = true 表示根文件</span></span>
<span class="line">root <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># [*] 表示针对所有文件都生效</span></span>
<span class="line"><span class="token punctuation">[</span>*<span class="token punctuation">]</span></span>
<span class="line">charset <span class="token operator">=</span> utf-8</span>
<span class="line"><span class="token comment"># 缩进格式是空格</span></span>
<span class="line">indent_style <span class="token operator">=</span> space</span>
<span class="line"><span class="token comment"># 缩进是2个空格</span></span>
<span class="line">indent_size <span class="token operator">=</span> <span class="token number">2</span></span>
<span class="line"><span class="token comment"># 换行符 \\n</span></span>
<span class="line">end_of_line <span class="token operator">=</span> lf</span>
<span class="line">insert_final_newline <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">trim_trailing_whitespace <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>配置解读</strong></p><p>root=true 对所有文件生效</p><p>end_of_line= lf 不同操作系统换行符不同</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">end_of_line</span>
<span class="line">lf <span class="token operator">|</span> cr <span class="token operator">|</span> <span class="token function">crlf</span> <span class="token punctuation">(</span>大小写不限）</span>
<span class="line">复制代码</span>
<span class="line">end_of_line设置的换行符的表示方式。先看一下这几个值是什么意思</span>
<span class="line"></span>
<span class="line">lf：全拼Line Feed，意思是换行，用符号 \\n 表示</span>
<span class="line"><span class="token literal-property property">cr</span><span class="token operator">:</span> 全拼Carriage Return， 意思是回车， 用符号 \\r 表示</span>
<span class="line">crlf：cr 和 lf的结合，回车换行，用符号 \\r\\n</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>insert_final_newline = true 代码最后新增一行</p><p>trim_trailing_whitespace = true 修剪尾随空格</p><blockquote><p>vscode 需要安装editorconfig插件</p></blockquote><h2 id="_3-prettier" tabindex="-1"><a class="header-anchor" href="#_3-prettier"><span>3.Prettier</span></a></h2><h3 id="部分配置" tabindex="-1"><a class="header-anchor" href="#部分配置"><span>部分配置</span></a></h3><ul><li><code>trailingComma</code>: 对象的最后一个属性末尾也会添加<code>,</code>,比如<code>{ a: 1, b: 2 }</code>会格式为<code>{ a: 1, b: 2 }</code></li><li><code>tabWidth</code>: 缩进大小</li><li><code>semi</code>: 是否添加分号</li><li><code>singleQuote</code> : 是否单引号</li><li><code>jsxSingleQuote</code>: jsx语法下是否单引号</li><li><code>endOfLine</code>: 与<code>.editorconfig</code>保持一致设置</li><li><code>printWidth</code>： 单行代码最长字符长度,超过之后会自动格式化换行</li><li><code>bracketSpacing</code>: 在对象中的括号之间打印空格, <code>{ a: 5 }</code>格式化为 <code>{ a: 5 }</code></li><li><code>arrowParens</code>: 箭头函数的参数无论有几个,都要括号包裹。比如<code>(a) =&gt; {}</code>,如果设为<code>avoid</code>,会自动格式化为<code>a =&gt; {}</code></li></ul><h3 id="安装配置流程" tabindex="-1"><a class="header-anchor" href="#安装配置流程"><span>安装配置流程</span></a></h3><p>1.安装prettier插件和vscode扩展Prettier - Code formatter</p><p>2.在项目根目录新建一个文件夹<code>.vscode</code>,在此文件下再建一个<code>settings.json</code></p><p>代码保存时会自动格式化代码</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 保存自动格式化代码</span></span>
<span class="line">  <span class="token property">&quot;editor.formatOnSave&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// 开启stylelint自动修复</span></span>
<span class="line">  <span class="token property">&quot;editor.codeActionsOnSave&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;source.fixAll&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// 默认格式化工具</span></span>
<span class="line">  <span class="token property">&quot;editor.defaultFormatter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esbenp.prettier-vscode&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="prettier配置" tabindex="-1"><a class="header-anchor" href="#prettier配置"><span>prettier配置</span></a></h3><p>在项目根目录上创建.prettierrc.cjs</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 每行最大列，超过换行</span></span>
<span class="line">  <span class="token literal-property property">printWidth</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// 使用制表符而不是空格缩进</span></span>
<span class="line">  <span class="token literal-property property">useTabs</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// 缩进</span></span>
<span class="line">  <span class="token literal-property property">tabWidth</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// 结尾不用分号</span></span>
<span class="line">  <span class="token literal-property property">semi</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// 使用单引号</span></span>
<span class="line">  <span class="token literal-property property">singleQuote</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// 在JSX中使用单引号而不是双引号</span></span>
<span class="line">  <span class="token literal-property property">jsxSingleQuote</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// 箭头函数里面，如果是一个参数的时候，去掉括号</span></span>
<span class="line">  <span class="token literal-property property">arrowParens</span><span class="token operator">:</span> <span class="token string">&#39;avoid&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// 对象、数组括号与文字间添加空格</span></span>
<span class="line">  <span class="token literal-property property">bracketSpacing</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// 尾随逗号</span></span>
<span class="line">  <span class="token literal-property property">trailingComma</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-eslint" tabindex="-1"><a class="header-anchor" href="#_4-eslint"><span>4.EsLint</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> js <span class="token keyword">from</span> <span class="token string">&#39;@eslint/js&#39;</span></span>
<span class="line"><span class="token keyword">import</span> globals <span class="token keyword">from</span> <span class="token string">&#39;globals&#39;</span></span>
<span class="line"><span class="token keyword">import</span> reactHooks <span class="token keyword">from</span> <span class="token string">&#39;eslint-plugin-react-hooks&#39;</span></span>
<span class="line"><span class="token keyword">import</span> reactRefresh <span class="token keyword">from</span> <span class="token string">&#39;eslint-plugin-react-refresh&#39;</span></span>
<span class="line"><span class="token keyword">import</span> tseslint <span class="token keyword">from</span> <span class="token string">&#39;typescript-eslint&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> tseslint<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token punctuation">{</span> <span class="token literal-property property">ignores</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;dist&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span>js<span class="token punctuation">.</span>configs<span class="token punctuation">.</span>recommended<span class="token punctuation">,</span> <span class="token operator">...</span>tseslint<span class="token punctuation">.</span>configs<span class="token punctuation">.</span>recommended<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">files</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;**/*.{ts,tsx}&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">languageOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">ecmaVersion</span><span class="token operator">:</span> <span class="token number">2020</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">globals</span><span class="token operator">:</span> globals<span class="token punctuation">.</span>browser<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token string-property property">&#39;react-hooks&#39;</span><span class="token operator">:</span> reactHooks<span class="token punctuation">,</span></span>
<span class="line">      <span class="token string-property property">&#39;react-refresh&#39;</span><span class="token operator">:</span> reactRefresh<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token operator">...</span>reactHooks<span class="token punctuation">.</span>configs<span class="token punctuation">.</span>recommended<span class="token punctuation">.</span>rules<span class="token punctuation">,</span></span>
<span class="line">      <span class="token string-property property">&#39;react-refresh/only-export-components&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">allowConstantExport</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token string-property property">&#39;react/react-in-jsx-scope&#39;</span><span class="token operator">:</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token comment">// 新增部分</span></span>
<span class="line">      <span class="token string-property property">&#39;no-console&#39;</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用console</span></span>
<span class="line">      <span class="token string-property property">&#39;no-unused-vars&#39;</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span><span class="token comment">// 禁止定义未使用的变量</span></span>
<span class="line">      <span class="token string-property property">&#39;no-debugger&#39;</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用debugger</span></span>
<span class="line">      <span class="token string-property property">&#39;no-var&#39;</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 要求使用 let 或 const 而不是 var</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-vite" tabindex="-1"><a class="header-anchor" href="#_5-vite"><span>5.Vite</span></a></h2><p>需要使用<code>path.resolve(__dirname, &#39;./src&#39;)</code>,这个是node里的,需要安装<code>@types/node</code></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span></span>
<span class="line"><span class="token keyword">import</span> react <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-react&#39;</span></span>
<span class="line"><span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span> <span class="token comment">// 需要安装@types/node</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  server<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    host<span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    port<span class="token operator">:</span> <span class="token number">8080</span><span class="token punctuation">,</span></span>
<span class="line">    proxy<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token string-property property">&#39;/api&#39;</span><span class="token operator">:</span> <span class="token string">&#39;http://api-driver.marsview.cc&#39;</span> <span class="token comment">// 遇到/api变成http://api-driver.marsview.cc</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  resolve<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    alias<span class="token operator">:</span> <span class="token punctuation">{</span> </span>
<span class="line">      <span class="token string-property property">&#39;@&#39;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./src&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">react</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-环境配置封装" tabindex="-1"><a class="header-anchor" href="#_6-环境配置封装"><span>6.环境配置封装</span></a></h2><h3 id="_6-1-方式一" tabindex="-1"><a class="header-anchor" href="#_6-1-方式一"><span>6.1 方式一:</span></a></h3><p>在项目根目录下创建环境配置<code>.env.development</code>、<code>.env.stag</code>、<code>.env.production</code></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title=".env.development"><pre><code><span class="line"><span class="token comment"># 设置NODE_ENV环境变量</span></span>
<span class="line"><span class="token assign-left variable">NODE_ENV</span><span class="token operator">=</span>development</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 接口API地址</span></span>
<span class="line"><span class="token assign-left variable">VITE_BASE_API</span><span class="token operator">=</span>/api</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 上传API</span></span>
<span class="line"><span class="token assign-left variable">VITE_UPLOAD_API</span><span class="token operator">=</span>http://api-driver-dev.marsview.cc</span>
<span class="line"></span>
<span class="line"><span class="token comment"># CDN地址</span></span>
<span class="line"><span class="token assign-left variable">VITE_CDN</span><span class="token operator">=</span>http://www.aliyun.com</span>
<span class="line"></span>
<span class="line"><span class="token comment"># MOCK 开关</span></span>
<span class="line"><span class="token assign-left variable">VITE_MOCK</span><span class="token operator">=</span>false</span>
<span class="line"></span>
<span class="line"><span class="token comment"># MOCK API</span></span>
<span class="line"><span class="token assign-left variable">VITE_MOCK_API</span><span class="token operator">=</span>https://dev.usemock.com/67b6d819cc83fde820e1ef02/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：要定义的变量必须以VITE_开头, 在js中可以通过import.meta.env.VITE_xxx来访问</p></blockquote><h2 id="额外知识" tabindex="-1"><a class="header-anchor" href="#额外知识"><span>额外知识</span></a></h2><h3 id="生产依赖和开发依赖" tabindex="-1"><a class="header-anchor" href="#生产依赖和开发依赖"><span>生产依赖和开发依赖</span></a></h3><ul><li>生产依赖表示打包上线时需要用到的依赖包</li><li>开发依赖表示在开发时需要依赖的包,但是在生产上线时不需要</li></ul>`,37)]))}const c=n(l,[["render",t],["__file","项目构建.html.vue"]]),r=JSON.parse('{"path":"/react_ts/%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA.html","title":"项目构建","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1.使用vite构建项目","slug":"_1-使用vite构建项目","link":"#_1-使用vite构建项目","children":[]},{"level":2,"title":"2.EditorConfig","slug":"_2-editorconfig","link":"#_2-editorconfig","children":[]},{"level":2,"title":"3.Prettier","slug":"_3-prettier","link":"#_3-prettier","children":[{"level":3,"title":"部分配置","slug":"部分配置","link":"#部分配置","children":[]},{"level":3,"title":"安装配置流程","slug":"安装配置流程","link":"#安装配置流程","children":[]},{"level":3,"title":"prettier配置","slug":"prettier配置","link":"#prettier配置","children":[]}]},{"level":2,"title":"4.EsLint","slug":"_4-eslint","link":"#_4-eslint","children":[]},{"level":2,"title":"5.Vite","slug":"_5-vite","link":"#_5-vite","children":[]},{"level":2,"title":"6.环境配置封装","slug":"_6-环境配置封装","link":"#_6-环境配置封装","children":[{"level":3,"title":"6.1 方式一:","slug":"_6-1-方式一","link":"#_6-1-方式一","children":[]}]},{"level":2,"title":"额外知识","slug":"额外知识","link":"#额外知识","children":[{"level":3,"title":"生产依赖和开发依赖","slug":"生产依赖和开发依赖","link":"#生产依赖和开发依赖","children":[]}]}],"git":{"updatedTime":1743651391000,"contributors":[{"name":"changfutao","username":"changfutao","email":"changfutao@126.com","commits":3,"url":"https://github.com/changfutao"}]},"filePathRelative":"react_ts/项目构建.md"}');export{c as comp,r as data};
