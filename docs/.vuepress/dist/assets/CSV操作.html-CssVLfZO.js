import{_ as n,c as a,b as e,o as p}from"./app-C9OaS0FJ.js";const t={};function l(c,s){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="csv操作" tabindex="-1"><a class="header-anchor" href="#csv操作"><span>CSV操作</span></a></h1><h2 id="_1-安装" tabindex="-1"><a class="header-anchor" href="#_1-安装"><span>1.安装</span></a></h2><div class="language-power line-numbers-mode" data-highlighter="prismjs" data-ext="power" data-title="power"><pre><code><span class="line">Install-Package CsvHelper</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_2-读" tabindex="-1"><a class="header-anchor" href="#_2-读"><span>2.读</span></a></h2><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line"></span>
<span class="line"><span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">	<span class="token class-name"><span class="token keyword">string</span></span> path <span class="token operator">=</span> <span class="token string">@&quot;e:\\1.csv&quot;</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> sr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamReader</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> Encoding<span class="token punctuation">.</span>Default<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> csv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CsvReader</span><span class="token punctuation">(</span>sr<span class="token punctuation">,</span> CultureInfo<span class="token punctuation">.</span>InvariantCulture<span class="token punctuation">)</span><span class="token punctuation">;</span>	</span>
<span class="line">	<span class="token class-name"><span class="token keyword">var</span></span> records <span class="token operator">=</span> csv<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRecords</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Foo<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> item <span class="token keyword">in</span> records<span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">{</span></span>
<span class="line">		item<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Foo</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span><span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-写" tabindex="-1"><a class="header-anchor" href="#_3-写"><span>3.写</span></a></h2><ul><li>单次写入</li></ul><div class="language-csh line-numbers-mode" data-highlighter="prismjs" data-ext="csh" data-title="csh"><pre><code><span class="line">void Main()</span>
<span class="line">{</span>
<span class="line">  	var records = new List&lt;Foo&gt;</span>
<span class="line">	{</span>
<span class="line">		new Foo { Id = 3, Name = &quot;one&quot; },</span>
<span class="line">		new Foo { Id = 4, Name = &quot;two&quot; },</span>
<span class="line">	};</span>
<span class="line">	string path =@&quot;e:\\1.csv&quot;;</span>
<span class="line">	using var sw = new StreamWriter(path, true);</span>
<span class="line">	using var csv = new CsvWriter(sw, CultureInfo.InstalledUICulture);</span>
<span class="line">	csv.WriteRecords(records);</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">class Foo</span>
<span class="line">{</span>
<span class="line">	public int Id { get; set; }</span>
<span class="line">	public string Name { get; set; }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>多次写入同一个文件</li></ul><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line"><span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">	</span>
<span class="line">	<span class="token class-name"><span class="token keyword">var</span></span> records <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Foo<span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">new</span> <span class="token constructor-invocation class-name">Foo</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;one&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token keyword">new</span> <span class="token constructor-invocation class-name">Foo</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;two&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token class-name"><span class="token keyword">string</span></span> path <span class="token operator">=</span><span class="token string">@&quot;e:\\1.csv&quot;</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token class-name"><span class="token keyword">bool</span></span> isExist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">if</span><span class="token punctuation">(</span>File<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">{</span></span>
<span class="line">		isExist <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	<span class="token keyword">using</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamWriter</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">using</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> csv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CsvWriter</span><span class="token punctuation">(</span>writer<span class="token punctuation">,</span> CultureInfo<span class="token punctuation">.</span>InstalledUICulture<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">//csv.WriteRecords(records);</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isExist<span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">{</span></span>
<span class="line">			csv<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">WriteHeader</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Foo<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			csv<span class="token punctuation">.</span><span class="token function">NextRecord</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">		<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token keyword">var</span> <span class="token keyword">record</span> <span class="token class-name"><span class="token keyword">in</span></span> records<span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">{</span></span>
<span class="line">			csv<span class="token punctuation">.</span><span class="token function">WriteRecord</span><span class="token punctuation">(</span><span class="token keyword">record</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			csv<span class="token punctuation">.</span><span class="token function">NextRecord</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Foo</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10)]))}const o=n(t,[["render",l],["__file","CSV操作.html.vue"]]),u=JSON.parse('{"path":"/csharp_demo/CSV%E6%93%8D%E4%BD%9C.html","title":"CSV操作","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1.安装","slug":"_1-安装","link":"#_1-安装","children":[]},{"level":2,"title":"2.读","slug":"_2-读","link":"#_2-读","children":[]},{"level":2,"title":"3.写","slug":"_3-写","link":"#_3-写","children":[]}],"git":{"updatedTime":1739263445000,"contributors":[{"name":"changfutao","username":"changfutao","email":"changfutao@126.com","commits":1,"url":"https://github.com/changfutao"}]},"filePathRelative":"csharp_demo/CSV操作.md"}');export{o as comp,u as data};
