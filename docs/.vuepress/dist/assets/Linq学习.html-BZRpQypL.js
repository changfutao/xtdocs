import{_ as a,c as n,b as l,o as r}from"./app-C9OaS0FJ.js";const i={};function t(s,e){return r(),n("div",null,e[0]||(e[0]=[l('<h1 id="linq学习" tabindex="-1"><a class="header-anchor" href="#linq学习"><span>Linq学习</span></a></h1><h2 id="_1-where" tabindex="-1"><a class="header-anchor" href="#_1-where"><span>1.Where</span></a></h2><h2 id="_2-count-longcount" tabindex="-1"><a class="header-anchor" href="#_2-count-longcount"><span>2.Count/LongCount</span></a></h2><h2 id="_3-any" tabindex="-1"><a class="header-anchor" href="#_3-any"><span>3.Any</span></a></h2><h2 id="_4-single-singleordefault" tabindex="-1"><a class="header-anchor" href="#_4-single-singleordefault"><span>4.Single/SingleOrDefault</span></a></h2><ul><li><p><code>Single</code>：确认有且只有一条满足要求的数据; 如果没有满足条件的数据或者满足条件的数据多于一条,Single方法就会抛出异常。</p></li><li><p><code>SingleOrDefault</code>：确认最多只有一条满足要求的数据; 如果没有满足条件的数据,SingleOrDefault方法就会返回类型的默认值。如果满足条件的数据多于一条,SingleOrDefault抛出异常。</p></li></ul><h2 id="_5-first-firstordefault" tabindex="-1"><a class="header-anchor" href="#_5-first-firstordefault"><span>5.First/FirstOrDefault</span></a></h2><ul><li><p><code>First</code>：如果满足条件的数据有一条或多条,First方法会返回第一条数据;如果没有满足条件的数据,First方法就会抛出异常。</p></li><li><p><code>FirstOrDefault</code>: 如果满足条件的数据有一条或多条,FirstOrDefault方法就会返回第一条数据; 如果没有满足条件的数据,FirstOrDefault方法就会返回类型的默认值。</p></li></ul><h2 id="_6-orderby-orderbydescending" tabindex="-1"><a class="header-anchor" href="#_6-orderby-orderbydescending"><span>6.OrderBy/OrderByDescending</span></a></h2><h2 id="_7-skip-take" tabindex="-1"><a class="header-anchor" href="#_7-skip-take"><span>7.Skip/Take</span></a></h2><h2 id="_8-max-min-avg-sum" tabindex="-1"><a class="header-anchor" href="#_8-max-min-avg-sum"><span>8.Max/Min/Avg/Sum</span></a></h2><h2 id="_9-groupby" tabindex="-1"><a class="header-anchor" href="#_9-groupby"><span>9.GroupBy</span></a></h2><h2 id="_10-select" tabindex="-1"><a class="header-anchor" href="#_10-select"><span>10.Select</span></a></h2><h2 id="_11-toarray-tolist" tabindex="-1"><a class="header-anchor" href="#_11-toarray-tolist"><span>11.ToArray/ToList</span></a></h2>',14)]))}const d=a(i,[["render",t],["__file","Linq学习.html.vue"]]),h=JSON.parse('{"path":"/csharp/Linq%E5%AD%A6%E4%B9%A0.html","title":"Linq学习","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1.Where","slug":"_1-where","link":"#_1-where","children":[]},{"level":2,"title":"2.Count/LongCount","slug":"_2-count-longcount","link":"#_2-count-longcount","children":[]},{"level":2,"title":"3.Any","slug":"_3-any","link":"#_3-any","children":[]},{"level":2,"title":"4.Single/SingleOrDefault","slug":"_4-single-singleordefault","link":"#_4-single-singleordefault","children":[]},{"level":2,"title":"5.First/FirstOrDefault","slug":"_5-first-firstordefault","link":"#_5-first-firstordefault","children":[]},{"level":2,"title":"6.OrderBy/OrderByDescending","slug":"_6-orderby-orderbydescending","link":"#_6-orderby-orderbydescending","children":[]},{"level":2,"title":"7.Skip/Take","slug":"_7-skip-take","link":"#_7-skip-take","children":[]},{"level":2,"title":"8.Max/Min/Avg/Sum","slug":"_8-max-min-avg-sum","link":"#_8-max-min-avg-sum","children":[]},{"level":2,"title":"9.GroupBy","slug":"_9-groupby","link":"#_9-groupby","children":[]},{"level":2,"title":"10.Select","slug":"_10-select","link":"#_10-select","children":[]},{"level":2,"title":"11.ToArray/ToList","slug":"_11-toarray-tolist","link":"#_11-toarray-tolist","children":[]}],"git":{"updatedTime":1739001322000,"contributors":[{"name":"changfutao","username":"changfutao","email":"changfutao@126.com","commits":1,"url":"https://github.com/changfutao"}]},"filePathRelative":"csharp/Linq学习.md"}');export{d as comp,h as data};
